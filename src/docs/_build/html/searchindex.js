Search.setIndex({"alltitles": {"Attributes:": [[2, "attributes"], [2, "id1"], [4, "attributes"], [4, "id1"], [4, "id2"], [5, "attributes"], [5, "id2"], [5, "id4"], [5, "id6"]], "Contents:": [[0, null]], "Methods:": [[2, "methods"], [2, "id2"], [4, "methods"], [4, "id3"], [5, "methods"], [5, "id3"], [5, "id5"]], "Module contents": [[1, "module-microstructpy"], [2, "module-microstructpy.markets"], [3, "module-microstructpy.metrics"], [4, "module-microstructpy.orders"], [5, "module-microstructpy.traders"], [6, "module-microstructpy.visualization"]], "Notes:": [[3, "notes"]], "Parameters": [[6, "parameters"], [6, "id1"]], "Parameters:": [[2, "parameters"], [2, "id3"], [2, "id4"], [2, "id5"], [2, "id6"], [2, "id7"], [3, "parameters"], [3, "id1"], [3, "id3"], [3, "id5"], [3, "id7"], [3, "id9"], [3, "id11"], [3, "id13"], [3, "id15"], [3, "id17"], [3, "id19"], [3, "id21"], [3, "id23"], [3, "id25"], [3, "id27"], [3, "id29"], [5, "parameters"], [5, "id1"]], "Raises:": [[2, "raises"], [5, "raises"]], "Returns": [[6, "returns"]], "Returns:": [[2, "returns"], [3, "returns"], [3, "id2"], [3, "id4"], [3, "id6"], [3, "id8"], [3, "id10"], [3, "id12"], [3, "id14"], [3, "id16"], [3, "id18"], [3, "id20"], [3, "id22"], [3, "id24"], [3, "id26"], [3, "id28"], [3, "id30"], [5, "returns"]], "Submodules": [[2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"]], "Subpackages": [[1, "subpackages"]], "microstructpy documentation": [[0, null]], "microstructpy package": [[1, null]], "microstructpy.markets package": [[2, null]], "microstructpy.markets.base module": [[2, "module-microstructpy.markets.base"]], "microstructpy.markets.continous module": [[2, "module-microstructpy.markets.continous"]], "microstructpy.metrics package": [[3, null]], "microstructpy.metrics.market module": [[3, "module-microstructpy.metrics.market"]], "microstructpy.metrics.trader_metrics module": [[3, "module-microstructpy.metrics.trader_metrics"]], "microstructpy.orders package": [[4, null]], "microstructpy.orders.base module": [[4, "module-microstructpy.orders.base"]], "microstructpy.orders.limit module": [[4, "module-microstructpy.orders.limit"]], "microstructpy.orders.market module": [[4, "module-microstructpy.orders.market"]], "microstructpy.traders package": [[5, null]], "microstructpy.traders.base module": [[5, "module-microstructpy.traders.base"]], "microstructpy.traders.ensemble module": [[5, "module-microstructpy.traders.ensemble"]], "microstructpy.traders.informed module": [[5, "module-microstructpy.traders.informed"]], "microstructpy.traders.market_maker module": [[5, "module-microstructpy.traders.market_maker"]], "microstructpy.traders.noise module": [[5, "module-microstructpy.traders.noise"]], "microstructpy.visualization package": [[6, null]], "microstructpy.visualization.summary module": [[6, "module-microstructpy.visualization.summary"]], "src": [[7, null]]}, "docnames": ["index", "microstructpy", "microstructpy.markets", "microstructpy.metrics", "microstructpy.orders", "microstructpy.traders", "microstructpy.visualization", "modules"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["index.rst", "microstructpy.rst", "microstructpy.markets.rst", "microstructpy.metrics.rst", "microstructpy.orders.rst", "microstructpy.traders.rst", "microstructpy.visualization.rst", "modules.rst"], "indexentries": {"active_volume (microstructpy.orders.base.order property)": [[4, "microstructpy.orders.base.Order.active_volume", false]], "agressor_ratio() (in module microstructpy.metrics.trader_metrics)": [[3, "microstructpy.metrics.trader_metrics.agressor_ratio", false]], "amihud_illiquidity() (in module microstructpy.metrics.market)": [[3, "microstructpy.metrics.market.amihud_illiquidity", false]], "average_trade_size() (in module microstructpy.metrics.trader_metrics)": [[3, "microstructpy.metrics.trader_metrics.average_trade_size", false]], "bayesianmarketmaker (class in microstructpy.traders.market_maker)": [[5, "microstructpy.traders.market_maker.BayesianMarketMaker", false]], "calculate_trader_metrics() (in module microstructpy.metrics.trader_metrics)": [[3, "microstructpy.metrics.trader_metrics.calculate_trader_metrics", false]], "cancel_all_orders() (microstructpy.traders.base.trader method)": [[5, "microstructpy.traders.base.Trader.cancel_all_orders", false]], "cancel_orders() (microstructpy.traders.base.trader method)": [[5, "microstructpy.traders.base.Trader.cancel_orders", false]], "continousorderbookmarket (class in microstructpy.markets.continous)": [[2, "microstructpy.markets.continous.ContinousOrderBookMarket", false]], "drop_cancelled_orders() (microstructpy.markets.continous.continousorderbookmarket method)": [[2, "microstructpy.markets.continous.ContinousOrderBookMarket.drop_cancelled_orders", false]], "effective_spread() (in module microstructpy.metrics.market)": [[3, "microstructpy.metrics.market.effective_spread", false]], "ensemble_traders() (in module microstructpy.traders.ensemble)": [[5, "microstructpy.traders.ensemble.ensemble_traders", false]], "execute_trade() (microstructpy.markets.continous.continousorderbookmarket method)": [[2, "microstructpy.markets.continous.ContinousOrderBookMarket.execute_trade", false]], "fill_rate() (in module microstructpy.metrics.trader_metrics)": [[3, "microstructpy.metrics.trader_metrics.fill_rate", false]], "final_position() (in module microstructpy.metrics.trader_metrics)": [[3, "microstructpy.metrics.trader_metrics.final_position", false]], "final_profit() (in module microstructpy.metrics.trader_metrics)": [[3, "microstructpy.metrics.trader_metrics.final_profit", false]], "get_participant() (microstructpy.markets.continous.continousorderbookmarket method)": [[2, "microstructpy.markets.continous.ContinousOrderBookMarket.get_participant", false]], "hurst_exponent() (in module microstructpy.metrics.market)": [[3, "microstructpy.metrics.market.hurst_exponent", false]], "information_ratio() (in module microstructpy.metrics.trader_metrics)": [[3, "microstructpy.metrics.trader_metrics.information_ratio", false]], "informedtrader (class in microstructpy.traders.informed)": [[5, "microstructpy.traders.informed.InformedTrader", false]], "kyle_lambda() (in module microstructpy.metrics.market)": [[3, "microstructpy.metrics.market.kyle_lambda", false]], "limitorder (class in microstructpy.orders.limit)": [[4, "microstructpy.orders.limit.LimitOrder", false]], "market (class in microstructpy.markets.base)": [[2, "microstructpy.markets.base.Market", false]], "marketmaker (class in microstructpy.traders.market_maker)": [[5, "microstructpy.traders.market_maker.MarketMaker", false]], "marketorder (class in microstructpy.orders.market)": [[4, "microstructpy.orders.market.MarketOrder", false]], "match_orders() (microstructpy.markets.continous.continousorderbookmarket method)": [[2, "microstructpy.markets.continous.ContinousOrderBookMarket.match_orders", false]], "mean_abs_position() (in module microstructpy.metrics.trader_metrics)": [[3, "microstructpy.metrics.trader_metrics.mean_abs_position", false]], "mean_position() (in module microstructpy.metrics.trader_metrics)": [[3, "microstructpy.metrics.trader_metrics.mean_position", false]], "microstructpy": [[1, "module-microstructpy", false]], "microstructpy.markets": [[2, "module-microstructpy.markets", false]], "microstructpy.markets.base": [[2, "module-microstructpy.markets.base", false]], "microstructpy.markets.continous": [[2, "module-microstructpy.markets.continous", false]], "microstructpy.metrics": [[3, "module-microstructpy.metrics", false]], "microstructpy.metrics.market": [[3, "module-microstructpy.metrics.market", false]], "microstructpy.metrics.trader_metrics": [[3, "module-microstructpy.metrics.trader_metrics", false]], "microstructpy.orders": [[4, "module-microstructpy.orders", false]], "microstructpy.orders.base": [[4, "module-microstructpy.orders.base", false]], "microstructpy.orders.limit": [[4, "module-microstructpy.orders.limit", false]], "microstructpy.orders.market": [[4, "module-microstructpy.orders.market", false]], "microstructpy.traders": [[5, "module-microstructpy.traders", false]], "microstructpy.traders.base": [[5, "module-microstructpy.traders.base", false]], "microstructpy.traders.ensemble": [[5, "module-microstructpy.traders.ensemble", false]], "microstructpy.traders.informed": [[5, "module-microstructpy.traders.informed", false]], "microstructpy.traders.market_maker": [[5, "module-microstructpy.traders.market_maker", false]], "microstructpy.traders.noise": [[5, "module-microstructpy.traders.noise", false]], "microstructpy.visualization": [[6, "module-microstructpy.visualization", false]], "microstructpy.visualization.summary": [[6, "module-microstructpy.visualization.summary", false]], "module": [[1, "module-microstructpy", false], [2, "module-microstructpy.markets", false], [2, "module-microstructpy.markets.base", false], [2, "module-microstructpy.markets.continous", false], [3, "module-microstructpy.metrics", false], [3, "module-microstructpy.metrics.market", false], [3, "module-microstructpy.metrics.trader_metrics", false], [4, "module-microstructpy.orders", false], [4, "module-microstructpy.orders.base", false], [4, "module-microstructpy.orders.limit", false], [4, "module-microstructpy.orders.market", false], [5, "module-microstructpy.traders", false], [5, "module-microstructpy.traders.base", false], [5, "module-microstructpy.traders.ensemble", false], [5, "module-microstructpy.traders.informed", false], [5, "module-microstructpy.traders.market_maker", false], [5, "module-microstructpy.traders.noise", false], [6, "module-microstructpy.visualization", false], [6, "module-microstructpy.visualization.summary", false]], "noisetrader (class in microstructpy.traders.noise)": [[5, "microstructpy.traders.noise.NoiseTrader", false]], "order (class in microstructpy.orders.base)": [[4, "microstructpy.orders.base.Order", false]], "order_book_depth() (in module microstructpy.metrics.market)": [[3, "microstructpy.metrics.market.order_book_depth", false]], "order_flow_imbalance() (in module microstructpy.metrics.market)": [[3, "microstructpy.metrics.market.order_flow_imbalance", false]], "participant_comparison() (in module microstructpy.visualization.summary)": [[6, "microstructpy.visualization.summary.participant_comparison", false]], "participants_report() (in module microstructpy.metrics.trader_metrics)": [[3, "microstructpy.metrics.trader_metrics.participants_report", false]], "position_history() (in module microstructpy.metrics.trader_metrics)": [[3, "microstructpy.metrics.trader_metrics.position_history", false]], "price_path() (in module microstructpy.visualization.summary)": [[6, "microstructpy.visualization.summary.price_path", false]], "profit_history() (in module microstructpy.metrics.trader_metrics)": [[3, "microstructpy.metrics.trader_metrics.profit_history", false]], "profit_per_state() (in module microstructpy.metrics.trader_metrics)": [[3, "microstructpy.metrics.trader_metrics.profit_per_state", false]], "profit_per_volume() (in module microstructpy.metrics.trader_metrics)": [[3, "microstructpy.metrics.trader_metrics.profit_per_volume", false]], "quoted_spread() (in module microstructpy.metrics.market)": [[3, "microstructpy.metrics.market.quoted_spread", false]], "realized_volatility() (in module microstructpy.metrics.market)": [[3, "microstructpy.metrics.market.realized_volatility", false]], "returns_autocorrelation() (in module microstructpy.metrics.market)": [[3, "microstructpy.metrics.market.returns_autocorrelation", false]], "roll_spread_estimator() (in module microstructpy.metrics.market)": [[3, "microstructpy.metrics.market.roll_spread_estimator", false]], "rolling_adf_test() (in module microstructpy.metrics.market)": [[3, "microstructpy.metrics.market.rolling_adf_test", false]], "rolling_cancellation_rate() (in module microstructpy.metrics.market)": [[3, "microstructpy.metrics.market.rolling_cancellation_rate", false]], "run() (microstructpy.markets.continous.continousorderbookmarket method)": [[2, "microstructpy.markets.continous.ContinousOrderBookMarket.run", false]], "save_ob_state() (microstructpy.markets.continous.continousorderbookmarket method)": [[2, "microstructpy.markets.continous.ContinousOrderBookMarket.save_ob_state", false]], "std_profit_per_state() (in module microstructpy.metrics.trader_metrics)": [[3, "microstructpy.metrics.trader_metrics.std_profit_per_state", false]], "submit_order() (microstructpy.markets.base.market method)": [[2, "microstructpy.markets.base.Market.submit_order", false]], "submit_order() (microstructpy.markets.continous.continousorderbookmarket method)": [[2, "microstructpy.markets.continous.ContinousOrderBookMarket.submit_order", false]], "submit_order() (microstructpy.traders.base.trader method)": [[5, "microstructpy.traders.base.Trader.submit_order", false]], "time_in_market() (in module microstructpy.metrics.trader_metrics)": [[3, "microstructpy.metrics.trader_metrics.time_in_market", false]], "total_trades() (in module microstructpy.metrics.trader_metrics)": [[3, "microstructpy.metrics.trader_metrics.total_trades", false]], "trade_midprice_deviation() (in module microstructpy.metrics.market)": [[3, "microstructpy.metrics.market.trade_midprice_deviation", false]], "trade_sign_autocorrelation() (in module microstructpy.metrics.market)": [[3, "microstructpy.metrics.market.trade_sign_autocorrelation", false]], "trader (class in microstructpy.traders.base)": [[5, "microstructpy.traders.base.Trader", false]], "trader_report() (in module microstructpy.metrics.trader_metrics)": [[3, "microstructpy.metrics.trader_metrics.trader_report", false]], "twaptrader (class in microstructpy.traders.informed)": [[5, "microstructpy.traders.informed.TWAPTrader", false]], "update() (microstructpy.traders.informed.informedtrader method)": [[5, "microstructpy.traders.informed.InformedTrader.update", false]], "update() (microstructpy.traders.informed.twaptrader method)": [[5, "microstructpy.traders.informed.TWAPTrader.update", false]], "update() (microstructpy.traders.market_maker.bayesianmarketmaker method)": [[5, "microstructpy.traders.market_maker.BayesianMarketMaker.update", false]], "update() (microstructpy.traders.market_maker.marketmaker method)": [[5, "microstructpy.traders.market_maker.MarketMaker.update", false]], "update() (microstructpy.traders.noise.noisetrader method)": [[5, "microstructpy.traders.noise.NoiseTrader.update", false]], "update_order_status() (microstructpy.markets.continous.continousorderbookmarket method)": [[2, "microstructpy.markets.continous.ContinousOrderBookMarket.update_order_status", false]], "variance_ratio_test() (in module microstructpy.metrics.market)": [[3, "microstructpy.metrics.market.variance_ratio_test", false]], "volume_as_agressor() (in module microstructpy.metrics.trader_metrics)": [[3, "microstructpy.metrics.trader_metrics.volume_as_agressor", false]], "volume_as_passive() (in module microstructpy.metrics.trader_metrics)": [[3, "microstructpy.metrics.trader_metrics.volume_as_passive", false]], "volume_traded() (in module microstructpy.metrics.trader_metrics)": [[3, "microstructpy.metrics.trader_metrics.volume_traded", false]], "vwap() (in module microstructpy.metrics.market)": [[3, "microstructpy.metrics.market.vwap", false]]}, "objects": {"": [[1, 0, 0, "-", "microstructpy"]], "microstructpy": [[2, 0, 0, "-", "markets"], [3, 0, 0, "-", "metrics"], [4, 0, 0, "-", "orders"], [5, 0, 0, "-", "traders"], [6, 0, 0, "-", "visualization"]], "microstructpy.markets": [[2, 0, 0, "-", "base"], [2, 0, 0, "-", "continous"]], "microstructpy.markets.base": [[2, 1, 1, "", "Market"]], "microstructpy.markets.base.Market": [[2, 2, 1, "", "submit_order"]], "microstructpy.markets.continous": [[2, 1, 1, "", "ContinousOrderBookMarket"]], "microstructpy.markets.continous.ContinousOrderBookMarket": [[2, 2, 1, "", "drop_cancelled_orders"], [2, 2, 1, "", "execute_trade"], [2, 2, 1, "", "get_participant"], [2, 2, 1, "", "match_orders"], [2, 2, 1, "", "run"], [2, 2, 1, "", "save_ob_state"], [2, 2, 1, "", "submit_order"], [2, 2, 1, "", "update_order_status"]], "microstructpy.metrics": [[3, 0, 0, "-", "market"], [3, 0, 0, "-", "trader_metrics"]], "microstructpy.metrics.market": [[3, 3, 1, "", "amihud_illiquidity"], [3, 3, 1, "", "effective_spread"], [3, 3, 1, "", "hurst_exponent"], [3, 3, 1, "", "kyle_lambda"], [3, 3, 1, "", "order_book_depth"], [3, 3, 1, "", "order_flow_imbalance"], [3, 3, 1, "", "quoted_spread"], [3, 3, 1, "", "realized_volatility"], [3, 3, 1, "", "returns_autocorrelation"], [3, 3, 1, "", "roll_spread_estimator"], [3, 3, 1, "", "rolling_adf_test"], [3, 3, 1, "", "rolling_cancellation_rate"], [3, 3, 1, "", "trade_midprice_deviation"], [3, 3, 1, "", "trade_sign_autocorrelation"], [3, 3, 1, "", "variance_ratio_test"], [3, 3, 1, "", "vwap"]], "microstructpy.metrics.trader_metrics": [[3, 3, 1, "", "agressor_ratio"], [3, 3, 1, "", "average_trade_size"], [3, 3, 1, "", "calculate_trader_metrics"], [3, 3, 1, "", "fill_rate"], [3, 3, 1, "", "final_position"], [3, 3, 1, "", "final_profit"], [3, 3, 1, "", "information_ratio"], [3, 3, 1, "", "mean_abs_position"], [3, 3, 1, "", "mean_position"], [3, 3, 1, "", "participants_report"], [3, 3, 1, "", "position_history"], [3, 3, 1, "", "profit_history"], [3, 3, 1, "", "profit_per_state"], [3, 3, 1, "", "profit_per_volume"], [3, 3, 1, "", "std_profit_per_state"], [3, 3, 1, "", "time_in_market"], [3, 3, 1, "", "total_trades"], [3, 3, 1, "", "trader_report"], [3, 3, 1, "", "volume_as_agressor"], [3, 3, 1, "", "volume_as_passive"], [3, 3, 1, "", "volume_traded"]], "microstructpy.orders": [[4, 0, 0, "-", "base"], [4, 0, 0, "-", "limit"], [4, 0, 0, "-", "market"]], "microstructpy.orders.base": [[4, 1, 1, "", "Order"]], "microstructpy.orders.base.Order": [[4, 4, 1, "", "active_volume"]], "microstructpy.orders.limit": [[4, 1, 1, "", "LimitOrder"]], "microstructpy.orders.market": [[4, 1, 1, "", "MarketOrder"]], "microstructpy.traders": [[5, 0, 0, "-", "base"], [5, 0, 0, "-", "ensemble"], [5, 0, 0, "-", "informed"], [5, 0, 0, "-", "market_maker"], [5, 0, 0, "-", "noise"]], "microstructpy.traders.base": [[5, 1, 1, "", "Trader"]], "microstructpy.traders.base.Trader": [[5, 2, 1, "", "cancel_all_orders"], [5, 2, 1, "", "cancel_orders"], [5, 2, 1, "", "submit_order"]], "microstructpy.traders.ensemble": [[5, 3, 1, "", "ensemble_traders"]], "microstructpy.traders.informed": [[5, 1, 1, "", "InformedTrader"], [5, 1, 1, "", "TWAPTrader"]], "microstructpy.traders.informed.InformedTrader": [[5, 2, 1, "", "update"]], "microstructpy.traders.informed.TWAPTrader": [[5, 2, 1, "", "update"]], "microstructpy.traders.market_maker": [[5, 1, 1, "", "BayesianMarketMaker"], [5, 1, 1, "", "MarketMaker"]], "microstructpy.traders.market_maker.BayesianMarketMaker": [[5, 2, 1, "", "update"]], "microstructpy.traders.market_maker.MarketMaker": [[5, 2, 1, "", "update"]], "microstructpy.traders.noise": [[5, 1, 1, "", "NoiseTrader"]], "microstructpy.traders.noise.NoiseTrader": [[5, 2, 1, "", "update"]], "microstructpy.visualization": [[6, 0, 0, "-", "summary"]], "microstructpy.visualization.summary": [[6, 3, 1, "", "participant_comparison"], [6, 3, 1, "", "price_path"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property"}, "terms": {"": [2, 3, 5], "0": [3, 5], "05": 3, "1": [2, 3, 5], "10": 2, "100": [3, 5], "1000": 5, "2": 3, "20": 3, "200": 3, "3": 5, "5": 3, "A": [2, 3, 4, 5, 6], "If": [2, 3, 5], "It": [1, 2, 4, 5], "The": [1, 2, 3, 4, 5, 6], "__repr__": 4, "about": 5, "absolut": 3, "account": 3, "action": 2, "activ": [2, 5], "active_volum": [1, 4], "ad": 5, "add": [0, 2], "adf_statist": 3, "after": 2, "aggreg": 2, "aggress": 3, "aggressor": 3, "agressor_ratio": [1, 3], "agressor_sid": [2, 3], "all": [2, 3, 5], "allow": 1, "alpha": 3, "amihud": 3, "amihud_illiquid": [1, 3], "amihud_lambda": 3, "an": [2, 3, 4, 5], "analysi": 1, "analyz": [1, 3], "appropri": 2, "ar": [2, 5], "arg": 3, "around": 5, "arriv": 2, "ask": [2, 3, 5], "ask_depth": 3, "ask_ob": 2, "asset": 2, "attribut": 3, "augment": 3, "auto": 3, "avail": 4, "averag": 3, "average_trade_s": [1, 3], "base": [1, 3, 7], "basic": [2, 4, 5], "bayesian": 5, "bayesianmarketmak": [1, 5], "been": [4, 5], "being": 2, "best": [3, 4], "better": 4, "between": [2, 3, 5], "bid": [2, 3, 5], "bid_depth": 3, "bid_ob": 2, "book": [2, 3, 5], "bool": [2, 3, 5], "both": [2, 3, 5], "bui": [2, 3, 4, 5], "buyer": 2, "calcul": [3, 4, 5], "calculate_trader_metr": [1, 3], "callabl": 5, "cancel": [2, 3, 5], "cancel_all_ord": [1, 5], "cancel_ord": [1, 5], "cancellation_r": 3, "captur": 2, "chang": 3, "chronolog": 2, "class": [2, 4, 5], "column": 3, "compar": 6, "complet": 2, "comprehens": 3, "consid": 3, "contain": [2, 3], "content": 7, "contin": [1, 7], "continousorderbookmarket": [1, 2], "continu": 2, "correl": 3, "cost": 3, "cov": 3, "covari": 3, "creat": [1, 2, 5], "cumul": 3, "current": [2, 5], "current_tick": 2, "custom": 1, "data": 3, "datafram": 3, "default": [2, 3], "definit": 4, "delta_price_t": 3, "depth": 3, "design": 1, "detail": 0, "deviat": 3, "dickei": 3, "dict": [3, 5], "dictionari": [3, 5], "differ": [3, 5], "divid": 3, "drop_cancelled_ord": [1, 2], "dummi": 5, "durat": 2, "each": [2, 3], "effect": 3, "effective_spread": [1, 3], "effective_spread_bui": 3, "effective_spread_sel": 3, "ensembl": [1, 7], "ensemble_trad": [1, 5], "estim": 3, "execut": [2, 3, 5], "execute_trad": [1, 2], "expon": 3, "extend": 2, "extens": 1, "fair": 5, "fals": 3, "fill": [3, 4, 5], "fill_rat": [1, 3], "filled_trad": 5, "final": 3, "final_posit": [1, 3], "final_profit": [1, 3], "financi": [2, 5], "fix": 5, "flag": [2, 5], "flexibl": 1, "float": [2, 3, 4, 5], "flow": 3, "from": [2, 3], "fuller": 3, "function": 3, "futur": 5, "gener": [1, 3, 4], "get": 3, "get_particip": [1, 2], "given": [2, 3], "ha": 4, "handl": 2, "have": [3, 5], "held": 3, "histori": [2, 3, 6], "hurst": 3, "hurst_expon": [1, 3], "i": [1, 2, 3, 4, 5], "id": [2, 4, 5], "identifi": [2, 5], "illiquid": 3, "imbal": 3, "immedi": 5, "implement": [2, 5], "includ": 5, "include_in_result": 5, "incom": 2, "index": 3, "indic": [2, 5], "infin": 4, "inform": [1, 2, 3, 7], "information_ratio": [1, 3], "informedtrad": [1, 5], "initi": 2, "initial_fair_valu": 5, "initial_uncertainti": 5, "instanc": 5, "instanti": 5, "instead": 3, "int": [2, 3, 4, 5], "interact": 5, "is_stationari": 3, "its": 3, "k": 3, "kei": 3, "know": 5, "kyle": 3, "kyle_lambda": [1, 3], "lag": 3, "lambda": 3, "last": 2, "last_submission_tim": 2, "level": [2, 3], "limit": [1, 5, 7], "limitord": [1, 4], "liquid": 5, "list": [2, 3, 5, 6], "logic": [2, 5], "maintain": 2, "maker": 5, "manag": [2, 4, 5], "market": [1, 5, 6, 7], "market_mak": [1, 7], "marketmak": [1, 5], "marketord": [1, 4], "match": 2, "match_ord": [1, 2], "max_inventori": 5, "max_lag": 3, "maximum": 3, "mean": 3, "mean_abs_posit": [1, 3], "mean_posit": [1, 3], "measur": 3, "method": 3, "metric": [1, 7], "microstructpi": 7, "microstructur": [1, 2], "midpoint": 3, "midpric": [2, 3], "model": [1, 2, 5], "modul": 7, "more": 2, "mult": 3, "multipl": 3, "multipli": 3, "must": 3, "name": 5, "need": 2, "neg": 4, "nois": [1, 7], "noisetrad": [1, 5], "non": 3, "none": [2, 5, 6], "notimplementederror": [2, 5], "number": [2, 3], "ob_snapshot": [2, 3], "object": [2, 3, 4, 5], "one": 2, "option": [2, 3], "order": [1, 2, 3, 5, 7], "order_book_depth": [1, 3], "order_flow_imbal": [1, 3], "order_histori": 3, "over": [2, 3], "overridden": [2, 5], "p_valu": 3, "packag": [0, 7], "pair": 3, "params_dict": 5, "partial": 5, "particip": [2, 3, 5, 6], "participant_comparison": [1, 6], "participants_report": [1, 3], "passiv": 3, "path": 6, "pd": 3, "per": 3, "perform": 3, "period": 3, "place": 5, "playground": [], "posit": [2, 3, 5, 6], "position_histori": [1, 3], "position_target": 5, "possibl": 2, "predefin": 5, "price": [2, 3, 4, 5, 6], "price_path": [1, 6], "process": [2, 5], "profit": [3, 6], "profit_histori": [1, 3], "profit_per_st": [1, 3], "profit_per_volum": [1, 3], "properti": 4, "proport": 3, "provid": [1, 2, 4, 5], "python": 1, "quot": 3, "quoted_spread": [1, 3], "r": 3, "random": [1, 5], "rang": 3, "rate": [3, 5], "ratio": 3, "reach": 5, "realiz": 3, "realized_volatil": [1, 3], "record": 2, "rel": 3, "remov": 2, "report": 3, "repres": [2, 3, 4, 5], "represent": 4, "restructuredtext": 0, "result": [5, 6], "retriev": 2, "return": 4, "returns_autocorr": 3, "returns_autocorrel": [1, 3], "roll": 3, "roll_spread": 3, "roll_spread_estim": [1, 3], "rolling_adf_test": [1, 3], "rolling_cancellation_r": [1, 3], "round": 3, "run": [1, 2], "save": 2, "save_ob_st": [1, 2], "secur": [4, 5], "see": 0, "sell": [2, 4, 5], "seller": 2, "separ": 2, "seri": 3, "serv": [2, 4, 5], "session": 2, "set": 5, "should": [2, 3, 5], "side": [2, 5], "sign": 3, "signific": 3, "simul": [2, 3, 5, 6], "singl": [2, 3], "size": [3, 5], "snapshot": [2, 3], "some": 5, "sort": 2, "sourc": [2, 3, 4, 5, 6], "specif": [2, 4, 5], "specifi": [2, 3], "spread": [3, 5], "sqrt": 3, "src": 0, "standard": 3, "state": [2, 3], "statu": [2, 3, 4], "status": 2, "std_profit_per_st": [1, 3], "step": 2, "store": 2, "str": [2, 3, 4, 5], "string": 4, "structur": [2, 4, 5], "subclass": [2, 5], "submiss": [2, 4, 5], "submission_r": 5, "submit": [2, 4, 5], "submit_ord": [1, 2, 5], "submodul": [1, 7], "subpackag": 7, "summari": [1, 7], "syntax": 0, "synthet": 1, "target": 5, "target_pric": 5, "test": 3, "thei": 2, "them": [1, 2], "thi": [2, 3, 4, 5], "tick": 2, "time": [2, 3, 4], "time_in_market": [1, 3], "timestamp": [2, 3, 4], "tool": [1, 5], "total": 3, "total_trad": [1, 3], "track": 2, "trade": [2, 3, 5], "trade_histori": [2, 3], "trade_midprice_devi": [1, 3], "trade_sign_autocorr": 3, "trade_sign_autocorrel": [1, 3], "trader": [1, 2, 3, 4, 6, 7], "trader_id": [2, 4, 5], "trader_metr": [1, 7], "trader_report": [1, 3], "trigger": 2, "trip": 3, "true": [3, 5], "tupl": [2, 3], "twap": 5, "twaptrad": [1, 5], "two": [2, 3], "type": [2, 4, 5], "union": 2, "uniqu": [2, 5], "unit": 3, "updat": [1, 2, 5], "update_order_statu": [1, 2], "us": [0, 3, 5], "user": 1, "valu": 5, "varianc": 3, "variance_ratio_test": [1, 3], "variou": 3, "visual": [1, 7], "volatil": 3, "volum": [2, 3, 4, 5], "volume_as_agressor": [1, 3], "volume_as_pass": [1, 3], "volume_s": 5, "volume_trad": [1, 3], "vr_statist": 3, "vwap": [1, 3], "weight": 3, "when": 2, "where": [2, 3], "whether": [2, 5], "which": [2, 3, 4, 5], "whose": 2, "window": 3, "window_s": 3, "within": 5, "yet": 4, "your": 0, "zero": 3}, "titles": ["microstructpy documentation", "microstructpy package", "microstructpy.markets package", "microstructpy.metrics package", "microstructpy.orders package", "microstructpy.traders package", "microstructpy.visualization package", "src"], "titleterms": {"attribut": [2, 4, 5], "base": [2, 4, 5], "content": [0, 1, 2, 3, 4, 5, 6], "contin": 2, "document": 0, "ensembl": 5, "inform": 5, "limit": 4, "market": [2, 3, 4], "market_mak": 5, "method": [2, 4, 5], "metric": 3, "microstructpi": [0, 1, 2, 3, 4, 5, 6], "modul": [1, 2, 3, 4, 5, 6], "nois": 5, "note": 3, "order": 4, "packag": [1, 2, 3, 4, 5, 6], "paramet": [2, 3, 5, 6], "playground": [], "rais": [2, 5], "return": [2, 3, 5, 6], "src": 7, "submodul": [2, 3, 4, 5, 6], "subpackag": 1, "summari": 6, "trader": 5, "trader_metr": 3, "visual": 6}})